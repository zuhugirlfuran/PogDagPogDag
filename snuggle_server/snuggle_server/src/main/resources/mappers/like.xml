<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.snuggle.model.dao.LikeDao">

	<!-- 좋아요 추가 (상품의 likeCount 증가) -->
	<insert id="insert" parameterType="map">
		INSERT INTO t_like (user_id,
		product_id, like_time)
		VALUES (#{userId}, #{productId}, NOW());

	</insert>

	<!-- 좋아요가 존재하는지 체크 (중복 좋아요 체크) -->
	<select id="countLike" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM t_like
		WHERE
		user_id = #{userId}
		AND product_id = #{productId};
	</select>

	<!-- 좋아요 삭제 (상품의 likeCount 감소) -->
	<delete id="delete" parameterType="map">
		DELETE FROM t_like
		WHERE
		user_id = #{userId} AND product_id = #{productId};

	</delete>

	<!-- 사용자가 좋아요한 상품 목록 조회 -->
	<select id="selectByUser" parameterType="String"
		resultType="Product">
		SELECT p.product_id, p.product_name, p.price, p.content, p.img,
		p.like_count
		FROM t_like l
		JOIN t_product p ON l.product_id =
		p.product_id
		WHERE l.user_id = #{userId}
	</select>

	<!-- 상품의 likeCount 증가 -->
	<update id="increaseLikeCount" parameterType="int">
		UPDATE t_product
		SET like_count = like_count + 1
		WHERE product_id = #{productId};
	</update>

	<!-- 상품의 likeCount 감소 -->
	<update id="decreaseLikeCount" parameterType="int">
		UPDATE t_product
		SET like_count = like_count - 1
		WHERE product_id = #{productId} AND
		like_count > 0;;
	</update>

	<!-- 상품의 likeCount 갱신 -->
	<update id="updateLikeCount" parameterType="int">
		UPDATE t_product
		SET like_count = (SELECT COUNT(*) FROM t_like WHERE product_id = #{productId})
		WHERE product_id = #{productId};
	</update>


	<!-- 좋아요 ID로 특정 좋아요 조회 -->
	<select id="selectBylikeId" parameterType="int"
		resultType="Like">
		SELECT * FROM t_like WHERE like_id = #{likeId}
	</select>

</mapper>
